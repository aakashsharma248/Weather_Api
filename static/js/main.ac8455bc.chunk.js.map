{"version":3,"sources":["Weathercard.js","Temp.js","App.js","index.js"],"names":["Weathercard","temp","humidity","pressure","weathermood","name","speed","country","sunset","React","useState","weatherState","setWeatherState","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Temp","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac8455bc.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst Weathercard = ({\r\n  temp,\r\n  humidity,\r\n  pressure,\r\n  weathermood,\r\n  name,\r\n  speed,\r\n  country,\r\n  sunset,\r\n}) => {\r\n  const [weatherState, setWeatherState] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (weathermood) {\r\n      switch (weathermood) {\r\n        case \"Clouds\":\r\n          setWeatherState(\"wi-day-cloudy\");\r\n          break;\r\n        case \"Haze\":\r\n          setWeatherState(\"wi-fog\");\r\n          break;\r\n        case \"Clear\":\r\n          setWeatherState(\"wi-day-sunny\");\r\n          break;\r\n        case \"Mist\":\r\n          setWeatherState(\"wi-dust\");\r\n          break;\r\n\r\n        default:\r\n          setWeatherState(\"wi-day-sunny\");\r\n          break;\r\n      }\r\n    }\r\n  }, [weathermood]);\r\n\r\n  // converting the seconds into time\r\n  let sec = sunset;\r\n  let date = new Date(sec * 1000);\r\n  let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n  return (\r\n    <>\r\n      <article className=\"widget\">\r\n        <div className=\"weatherIcon\">\r\n          <i className={`wi ${weatherState}`}></i>\r\n        </div>\r\n\r\n        <div className=\"weatherInfo\">\r\n          <div className=\"temperature\">\r\n            <span>{temp}&deg;</span>\r\n          </div>\r\n\r\n          <div className=\"description\">\r\n            <div className=\"weatherCondition\">{weathermood}</div>\r\n            <div className=\"place\">\r\n              {name}, {country}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"date\"> {new Date().toLocaleString()} </div>\r\n\r\n        {/* our 4column section  */}\r\n        <div className=\"extra-temp\">\r\n          <div className=\"temp-info-minmax\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-sunset\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {timeStr} PM <br />\r\n                Sunset\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-humidity\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {humidity} <br />\r\n                Humidity\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"weather-extra-info\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-rain\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {pressure} <br />\r\n                Pressure\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-strong-wind\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {speed} <br />\r\n                Speed\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weathercard;","import React, { useState, useEffect } from \"react\";\r\nimport Weathercard from \"./Weathercard\";\r\nimport \"./Style.css\";\r\n\r\nconst Temp = () => {\r\n  const [searchValue, setSearchValue] = useState(\"pune\");\r\n  const [tempInfo, setTempInfo] = useState({});\r\n\r\n  const getWeatherInfo = async () => {\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&appid=136163f3c2e633864d62cba1ad9c6824`;\r\n\r\n      let res = await fetch(url);\r\n      let data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { main: weathermood } = data.weather[0];\r\n      const { name } = data;\r\n      const { speed } = data.wind;\r\n      const { country, sunset } = data.sys;\r\n\r\n      const myNewWeatherInfo = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n      };\r\n\r\n      setTempInfo(myNewWeatherInfo);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"search...\"\r\n            autoFocus\r\n            id=\"search\"\r\n            className=\"searchTerm\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n\r\n          <button\r\n            className=\"searchButton\"\r\n            type=\"button\"\r\n            onClick={getWeatherInfo}>\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* our temp card  */}\r\n      <Weathercard {...tempInfo} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temp;","import React from 'react';\nimport Temp from './Temp';\n\nfunction App() {\n  return (\n    <>\n    <Temp />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}